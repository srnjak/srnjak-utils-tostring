name: Build and Deploy

on:
  push:
    branches:
      - '*'  # All branches
  workflow_dispatch:
  workflow_run:
    workflows: ["Merge Develop to Master"]
    types:
      - completed

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: srnjak/ci-builder-maven:3.9.6-jdk21-9
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: /root/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package -s mvn-settings.xml

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-jars
          path: target/*.jar

  deploy-snapshot:
    needs: build
    name: Deploy Snapshot
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    container:
      image: srnjak/ci-builder-maven:3.9.6-jdk21-9
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo 'OSSRH_USERNAME_PARAM=${{ vars.OSSRH_USERNAME_PARAM }}' >> $GITHUB_ENV
          echo 'OSSRH_PASSWORD_PARAM=${{ secrets.OSSRH_PASSWORD_PARAM }}' >> $GITHUB_ENV

      - name: Deploy with Maven
        run: |
          echo ${{ secrets.GPG_PRIVATE_KEY }} | base64 --decode | gpg --batch --import
          mvn -B deploy -s mvn-settings.xml -DskipTests -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"

  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && !startsWith(github.event.head_commit.message, '[release] ')
    container:
      image: srnjak/ci-builder-maven:3.9.6-jdk21-9
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for tagging

      - name: Set up environment variables
        run: |
          echo 'OSSRH_USERNAME_PARAM=${{ vars.OSSRH_USERNAME_PARAM }}' >> $GITHUB_ENV
          echo 'OSSRH_PASSWORD_PARAM=${{ secrets.OSSRH_PASSWORD_PARAM }}' >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Import GPG Key
        run: |
          echo ${{ secrets.GPG_PRIVATE_KEY }} | base64 --decode | gpg --batch --import
  
      - name: Prepare Release Version
        run: |
          mvn -B versions:set -s mvn-settings.xml -DremoveSnapshot=true
          mvn -B scm:checkin -s mvn-settings.xml -Dmessage="[release] Release version prepared."
  
      - name: Build and Deploy to OSSRH
        run: |
          mvn -B clean scm:tag deploy -s mvn-settings.xml -P ossrh -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"

      - name: Extract Last Staging Repository ID
        env:
          MVN_SETTINGS_PATH: '${{ github.workspace }}/mvn-settings.xml'
        run: |
          STAGING_REPO_ID=$(./scripts/extract_staging_repo_id.sh comsrnjak-)
          echo "Extracted Staging Repository ID: $STAGING_REPO_ID"
          echo "STAGING_REPO_ID=$STAGING_REPO_ID" >> $GITHUB_ENV

      - name: Release to Maven Central
        env:
          MAVEN_OPTS: "--add-opens java.base/java.util=ALL-UNNAMED"
        run: |
          mvn -B nexus-staging:close -s mvn-settings.xml -P ossrh -DstagingRepositoryId=${{ env.STAGING_REPO_ID }}
          mvn -B nexus-staging:release -s mvn-settings.xml -P ossrh -DstagingRepositoryId=${{ env.STAGING_REPO_ID }}
  
      - name: Prepare Next Snapshot Version
        run: |
          mvn versions:set -s mvn-settings.xml -DnextSnapshot=true
          mvn -B scm:checkin -s mvn-settings.xml -Dmessage="[release] New snapshot version prepared."

  merge-to-develop:
    needs: release
    name: Merge master into develop
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    container:
      image: srnjak/ci-builder-maven:3.9.6-jdk21-9
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0  # Fetches all history for all branches and tags

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Fetch master branch
        run: git fetch origin master:master

      - name: Merge master into develop
        run: |
          git checkout develop
          git merge master --no-ff
          git push origin develop
